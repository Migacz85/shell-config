# fzf-based reverse history search
__fzf_history_search() {
  local selected=$(HISTTIMEFORMAT= history | fzf +s --tac | sed 's/ *[0-9]* *//')
  if [ -n "$selected" ]; then
    READLINE_LINE="$selected"
    READLINE_POINT=${#READLINE_LINE}
  fi
}

bind -x '"\C-r": __fzf_history_search'

# --- Colors for better output ---
C_RESET='\033[0m'
C_RED='\033[0;31m'
C_GREEN='\033[0;32m'
C_YELLOW='\033[0;33m'
C_BLUE='\033[0;34m'
C_CYAN='\033[0;36m'

# --- Utility Functions ---
info() { echo -e "INFO: " >&2; }
warn() { echo -e "WARN: " >&2; }
error() { echo -e "ERROR: " >&2; exit 1; }
success() { echo -e "SUCCESS: " >&2; }

find_wp_installations() {
  info "Searching for WordPress installations..."
  local search_paths=("/var/www" "/srv/www" "/usr/share/nginx" "$HOME")
  local found_paths
  found_paths=$(find "${search_paths[@]}" -maxdepth 4 -type f -name "wp-settings.php" -printf "%h\n" 2>/dev/null | sort -u)
  if [[ -z "$found_paths" ]]; then
    warn "Standard search failed. Trying 'wp find-installations'..."
    found_paths=$(wp find-installations --skip-packages --quiet 2>/dev/null | awk '{print $2}')
  fi
  echo "$found_paths"
}

wpcd() {
  local dir
  dir=$(find_wp_installations | fzf)
  if [ -n "$dir" ]; then
    cd "$dir" || return
  fi
}

alias wpcd='wpcd'
